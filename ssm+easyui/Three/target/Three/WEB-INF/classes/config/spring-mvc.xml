<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
						http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task-3.2.xsd">  
						
	<bean id="propertyConfigurer1"    
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    
        		<property name="location" value="classpath:config/redis.properties" /> 
	</bean>   
                        	
	 <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.three.controller" />  
    <!-- 自动扫描注解包 -->
	<context:component-scan base-package="com.**" />
	
    <!-- 开启MVC注解 -->
	<mvc:annotation-driven /> 
	
	<context:annotation-config/>  
	
	
	 
	
	
	
	<!-- <context:property-placeholder 
			location="classpath:config/redis.properties" />
			
	<bean id="redisUtil" class="com.three.utils.RedisUtil">
		<property name="addr" value="${redis.addr}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="maxIdle" value="${redis.maxIdle}"></property>
		<property name="maxActive" value="${redis.maxActive}"></property>
		<property name="maxWait" value="${redis.maxWait}"></property>
		<property name="timeout" value="${redis.timeout}"></property>
		<property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
	</bean>	 -->		
	
	
	
	<!-- 静态资源拦截 -->
	<mvc:default-servlet-handler />
	
	 <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/views" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
    
    
    <!-- 支持返回json（避免IE在ajax请求时，返回json出现下载），@responseBody-（数据绑定）-messageConverters -->
     <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>   
    
    
    <bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property> 
		 
	</bean>
	
	<task:annotation-driven />
	
	<!-- 设置定时任务 -->
	<!-- <task:annotation-driven/> -->
	<!-- <bean id="SchedulerTask3" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass">
			<value>com.wx.utils.TestHtmlParser</value>
		</property>
	</bean> -->
	
	<!-- <bean id="SchedulerTaskTrigger3" class="org.springframework.scheduling.quartz.CronTriggerBean">
	  <property name="jobDetail" ref="SchedulerTask3" />
	  <property name="cronExpression">
	   <value>0/10 * * * * ?</value>
	  </property>
	 </bean> -->
	 
	 <!-- 开启定时任务 -->
	<!-- <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean ="SchedulerTaskTrigger3" />
			</list>
		</property>
	</bean> -->
    
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>   
	
	<!--定义异常处理页面 -->
		<bean id="exceptionResolver"
			class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
			<property name="exceptionMappings">
				<props>
					<prop key="java.sql.SQLException">/WEB-INF/views/error/500</prop>
					<prop key="java.io.IOException">/WEB-INF/views/error/500</prop>
				</props>
			</property>
		</bean>

</beans>